/*! For license information please see 329.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_basic=this.webpackChunk_tsparticles_basic||[]).push([[329],{5329:(t,e,s)=>{s.d(e,{OutOfCanvasUpdater:()=>i});const a=(t,e)=>t.default===e||t.bottom===e||t.left===e||t.right===e||t.top===e;class i{constructor(t){this._updateOutMode=async(t,e,s,a)=>{for(const i of this.updaters)await i.update(t,a,e,s)},this.container=t,this.updaters=[]}async init(t){this.updaters=[];const e=t.options.move.outModes;if(a(e,"bounce")){const{BounceOutMode:t}=await s.e(859).then(s.bind(s,7859));this.updaters.push(new t(this.container))}else if(a(e,"out")){const{OutOutMode:t}=await s.e(866).then(s.bind(s,4866));this.updaters.push(new t(this.container))}else if(a(e,"destroy")){const{DestroyOutMode:t}=await s.e(648).then(s.bind(s,3648));this.updaters.push(new t(this.container))}else if(a(e,"none")){const{NoneOutMode:t}=await s.e(886).then(s.bind(s,7886));this.updaters.push(new t(this.container))}}isEnabled(t){return!t.destroyed&&!t.spawning}async update(t,e){const s=t.options.move.outModes;await this._updateOutMode(t,e,s.bottom??s.default,"bottom"),await this._updateOutMode(t,e,s.left??s.default,"left"),await this._updateOutMode(t,e,s.right??s.default,"right"),await this._updateOutMode(t,e,s.top??s.default,"top")}}}}]);