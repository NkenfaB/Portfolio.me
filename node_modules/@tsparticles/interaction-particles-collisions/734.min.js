/*! For license information please see 734.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_interaction_particles_collisions=this.webpackChunk_tsparticles_interaction_particles_collisions||[]).push([[734],{734:(t,e,i)=>{i.d(e,{Collider:()=>o});var s=i(533);async function n(t,e,s,n){switch(t.options.collisions.mode){case"absorb":{const{absorb:o}=await i.e(716).then(i.bind(i,716));o(t,e,s,n);break}case"bounce":{const{bounce:s}=await i.e(606).then(i.bind(i,606));s(t,e);break}case"destroy":{const{destroy:s}=await i.e(337).then(i.bind(i,337));s(t,e);break}}}class o extends s.ParticlesInteractorBase{constructor(t){super(t)}clear(){}init(){}async interact(t,e){if(t.destroyed||t.spawning)return;const i=this.container,o=t.getPosition(),a=t.getRadius(),c=i.particles.quadTree.queryCircle(o,2*a);for(const r of c){if(t===r||!r.options.collisions.enable||t.options.collisions.mode!==r.options.collisions.mode||r.destroyed||r.spawning)continue;const c=r.getPosition(),l=r.getRadius();if(Math.abs(Math.round(o.z)-Math.round(c.z))>a+l)continue;(0,s.getDistance)(o,c)>a+l||await n(t,r,e,i.retina.pixelRatio)}}isEnabled(t){return t.options.collisions.enable}reset(){}}}}]);