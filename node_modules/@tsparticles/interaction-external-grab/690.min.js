/*! For license information please see 690.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_interaction_external_grab=this.webpackChunk_tsparticles_interaction_external_grab||[]).push([[690],{690:(t,e,n)=>{n.d(e,{Grabber:()=>a});var i=n(533),o=n(30);function r(t,e,n,o,r){t.canvas.draw((t=>{const a=e.getPosition();!function(t,e,n,o,r,a){(0,i.drawLine)(t,n,o),t.strokeStyle=(0,i.getStyleFromRgb)(r,a),t.lineWidth=e,t.stroke()}(t,e.retina.linksWidth??0,a,r,n,o)}))}class a extends i.ExternalInteractorBase{constructor(t){super(t)}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.grab;e&&(t.retina.grabModeDistance=e.distance*t.retina.pixelRatio)}async interact(){const t=this.container,e=t.actualOptions.interactivity;if(!e.modes.grab||!e.events.onHover.enable||t.interactivity.status!==i.mouseMoveEvent)return;const n=t.interactivity.mouse.position;if(!n)return;const o=t.retina.grabModeDistance;if(!o||o<0)return;const a=t.particles.quadTree.queryCircle(n,o,(t=>this.isEnabled(t)));for(const s of a){const a=s.getPosition(),c=(0,i.getDistance)(a,n);if(c>o)continue;const l=e.modes.grab.links,b=l.opacity,g=b-c*b/o;if(g<=0)continue;const d=l.color??s.options.links?.color;if(!t.particles.grabLineColor&&d){const n=e.modes.grab.links;t.particles.grabLineColor=(0,i.getLinkRandomColor)(d,n.blink,n.consent)}const u=(0,i.getLinkColor)(s,void 0,t.particles.grabLineColor);u&&r(t,s,u,g,n)}await Promise.resolve()}isEnabled(t){const e=this.container,n=e.interactivity.mouse,o=(t?.interactivity??e.actualOptions.interactivity).events;return o.onHover.enable&&!!n.position&&(0,i.isInArray)("grab",o.onHover.mode)}loadModeOptions(t,...e){t.grab||(t.grab=new o.z);for(const n of e)t.grab.load(n?.grab)}reset(){}}}}]);