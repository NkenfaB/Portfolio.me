/*! For license information please see 617.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_updater_stroke_color=this.webpackChunk_tsparticles_updater_stroke_color||[]).push([[617],{617:(e,o,t)=>{t.d(o,{StrokeColorUpdater:()=>a});var r=t(533);class a{constructor(e){this.container=e}async init(e){const o=this.container,t=e.options,a=(0,r.itemFromSingleOrMultiple)(t.stroke,e.id,t.reduceDuplicates);e.strokeWidth=(0,r.getRangeValue)(a.width)*o.retina.pixelRatio,e.strokeOpacity=(0,r.getRangeValue)(a.opacity??1),e.strokeAnimation=a.color?.animation;const i=(0,r.rangeColorToHsl)(a.color)??e.getFillColor();i&&(e.strokeColor=(0,r.getHslAnimationFromHsl)(i,e.strokeAnimation,o.retina.reduceFactor)),await Promise.resolve()}isEnabled(e){const o=e.strokeAnimation,{strokeColor:t}=e;return!e.destroyed&&!e.spawning&&!!o&&(void 0!==t?.h.value&&t.h.enable||void 0!==t?.s.value&&t.s.enable||void 0!==t?.l.value&&t.l.enable)}async update(e,o){this.isEnabled(e)&&((0,r.updateColor)(e.strokeColor,o),await Promise.resolve())}}}}]);