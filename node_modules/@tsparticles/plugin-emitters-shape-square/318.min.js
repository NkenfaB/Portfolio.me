/*! For license information please see 318.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_plugin_emitters_shape_square=this.webpackChunk_tsparticles_plugin_emitters_shape_square||[]).push([[318],{318:(t,e,s)=>{s.d(e,{EmittersSquareShapeGenerator:()=>o});var i=s(68),n=s(533);function r(t,e){return t+e*((0,n.getRandom)()-n.halfRandom)}class a extends i.EmitterShapeBase{constructor(t,e,s,i){super(t,e,s,i)}async init(){}async randomPosition(){return await new Promise((t=>{const e=this.fill,s=this.position,i=this.size;if(e)return t({position:{x:r(s.x,i.width),y:r(s.y,i.height)}});{const e=.5*i.width,r=.5*i.height,a=Math.floor(4*(0,n.getRandom)()),o=2*((0,n.getRandom)()-n.halfRandom);switch(a){case 0:return t({position:{x:s.x+o*e,y:s.y-r}});case 1:return t({position:{x:s.x-e,y:s.y+o*r}});case 2:return t({position:{x:s.x+o*e,y:s.y+r}});default:return t({position:{x:s.x+e,y:s.y+o*r}})}}}))}}class o{generate(t,e,s,i){return new a(t,e,s,i)}}}}]);