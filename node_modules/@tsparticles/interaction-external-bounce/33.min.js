/*! For license information please see 33.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_interaction_external_bounce=this.webpackChunk_tsparticles_interaction_external_bounce||[]).push([[33],{33:(e,n,t)=>{t.d(n,{Bouncer:()=>s});var i=t(533),o=t(523);const a="bounce";class s extends i.ExternalInteractorBase{constructor(e){super(e)}clear(){}init(){const e=this.container,n=e.actualOptions.interactivity.modes.bounce;n&&(e.retina.bounceModeDistance=n.distance*e.retina.pixelRatio)}async interact(){const e=this.container,n=e.actualOptions.interactivity.events,o=e.interactivity.status===i.mouseMoveEvent,s=n.onHover.enable,c=n.onHover.mode,r=n.onDiv;if(o&&s&&(0,i.isInArray)(a,c)){const{mouseBounce:e}=await t.e(409).then(t.bind(t,409));e(this.container,(e=>this.isEnabled(e)))}else{const{divBounce:e}=await t.e(409).then(t.bind(t,409));e(this.container,r,a,(e=>this.isEnabled(e)))}}isEnabled(e){const n=this.container,t=n.actualOptions,o=n.interactivity.mouse,s=(e?.interactivity??t.interactivity).events,c=s.onDiv;return!!o.position&&s.onHover.enable&&(0,i.isInArray)(a,s.onHover.mode)||(0,i.isDivModeEnabled)(a,c)}loadModeOptions(e,...n){e.bounce||(e.bounce=new o.s);for(const t of n)e.bounce.load(t?.bounce)}reset(){}}}}]);