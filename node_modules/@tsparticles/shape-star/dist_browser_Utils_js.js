/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.2.1
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(this["webpackChunk_tsparticles_shape_star"] = this["webpackChunk_tsparticles_shape_star"] || []).push([["dist_browser_Utils_js"],{

/***/ "./dist/browser/Utils.js":
/*!*******************************!*\
  !*** ./dist/browser/Utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawStar: () => (/* binding */ drawStar)\n/* harmony export */ });\nconst defaultInset = 2,\n  origin = {\n    x: 0,\n    y: 0\n  };\nfunction drawStar(data) {\n  const {\n      context,\n      particle,\n      radius\n    } = data,\n    sides = particle.sides,\n    inset = particle.starInset ?? defaultInset;\n  context.moveTo(origin.x, origin.y - radius);\n  for (let i = 0; i < sides; i++) {\n    context.rotate(Math.PI / sides);\n    context.lineTo(origin.x, origin.y - radius * inset);\n    context.rotate(Math.PI / sides);\n    context.lineTo(origin.x, origin.y - radius);\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/shape-star/./dist/browser/Utils.js?");

/***/ })

}]);