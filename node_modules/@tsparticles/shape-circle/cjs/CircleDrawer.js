"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CircleDrawer = void 0;
const engine_1 = require("@tsparticles/engine");
const sides = 12, maxAngle = 360, minAngle = 0;
class CircleDrawer {
    async draw(data) {
        const { drawCircle } = await Promise.resolve().then(() => __importStar(require("./Utils.js")));
        drawCircle(data);
    }
    getSidesCount() {
        return sides;
    }
    async particleInit(container, particle) {
        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {
            max: maxAngle,
            min: minAngle,
        };
        particle.circleRange = !(0, engine_1.isObject)(angle)
            ? {
                min: minAngle,
                max: (0, engine_1.degToRad)(angle),
            }
            : { min: (0, engine_1.degToRad)(angle.min), max: (0, engine_1.degToRad)(angle.max) };
        await Promise.resolve();
    }
}
exports.CircleDrawer = CircleDrawer;
