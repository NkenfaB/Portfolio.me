/*! For license information please see 460.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_move_base=this.webpackChunk_tsparticles_move_base||[]).push([[460],{460:(e,a,t)=>{t.d(a,{BaseMover:()=>i});var n=t(533);class i{async init(e){const a=e.options.move.gravity;e.gravity={enable:a.enable,acceleration:(0,n.getRangeValue)(a.acceleration),inverse:a.inverse};const{initSpin:i}=await t.e(103).then(t.bind(t,103));i(e),await Promise.resolve()}isEnabled(e){return!e.destroyed&&e.options.move.enable}async move(e,a){const i=e.options,o=i.move;if(!o.enable)return;const s=e.container,r=s.retina.pixelRatio;e.retina.moveSpeed??=(0,n.getRangeValue)(o.speed)*r,e.retina.moveDrift??=(0,n.getRangeValue)(e.options.move.drift)*r;const{getProximitySpeedFactor:c}=await t.e(103).then(t.bind(t,103)),p=c(e),v=e.retina.moveSpeed*s.retina.reduceFactor,l=e.retina.moveDrift,d=(0,n.getRangeMax)(i.size.value)*r,m=v*(o.size?e.getRadius()/d:1)*p*(a.factor||1)/2,b=e.retina.maxSpeed??s.retina.maxSpeed;if(o.spin.enable){const{spin:a}=await t.e(103).then(t.bind(t,103));a(e,m)}else{const{move:n}=await t.e(103).then(t.bind(t,103));await n(e,o,m,b,l,a)}const{applyDistance:g}=await t.e(103).then(t.bind(t,103));g(e)}}}}]);