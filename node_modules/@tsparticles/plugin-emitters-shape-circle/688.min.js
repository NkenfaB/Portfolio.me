/*! For license information please see 688.min.js.LICENSE.txt */
(this.webpackChunk_tsparticles_plugin_emitters_shape_circle=this.webpackChunk_tsparticles_plugin_emitters_shape_circle||[]).push([[688],{688:(t,s,e)=>{e.d(s,{EmittersCircleShapeGenerator:()=>c});var a=e(68),i=e(533);const n=.25,r=2*Math.PI;class h extends a.EmitterShapeBase{constructor(t,s,e,a){super(t,s,e,a)}async init(){}async randomPosition(){const t=this.size,s=this.fill,e=this.position,[a,h]=[.5*t.width,.5*t.height],c=((t,s)=>{const e=(0,i.getRandom)()*n,a=Math.atan(s/t*Math.tan(r*e)),h=(0,i.getRandom)();return h<n?a:h<.5?Math.PI-a:h<.75?Math.PI+a:-a})(a,h),o=(u=c,(l=a)*(M=h)/Math.sqrt((M*Math.cos(u))**2+(l*Math.sin(u))**2)),p=s?o*Math.sqrt((0,i.getRandom)()):o;var l,M,u;return Promise.resolve({position:{x:e.x+p*Math.cos(c),y:e.y+p*Math.sin(c)}})}}class c{generate(t,s,e,a){return new h(t,s,e,a)}}}}]);