/*! For license information please see 3685.min.js.LICENSE.txt */
(this.webpackChunktsparticles=this.webpackChunktsparticles||[]).push([[3685],{2683:(a,t,e)=>{e.d(t,{TextDrawer:()=>n,h:()=>i});var s=e(3624);const i=["text","character","char","multiline-text"];class n{async draw(a){const{drawText:t}=await e.e(8445).then(e.bind(e,8445));t(a)}async init(a){const t=a.actualOptions;if(i.find((a=>(0,s.dB)(a,t.particles.shape.type)))){const a=i.map((a=>t.particles.shape.options[a])).find((a=>!!a)),e=[];(0,s.KH)(a,(a=>{e.push((0,s.mx)(a.font,a.weight))})),await Promise.all(e)}}async particleInit(a,t){if(!t.shape||!i.includes(t.shape))return;const e=t.shapeData;if(void 0===e)return;const n=e.value;void 0!==n&&(t.text=(0,s.wA)(n,t.randomIndexData),await Promise.resolve())}}},3685:(a,t,e)=>{e.d(t,{loadTextShape:()=>i});var s=e(2683);async function i(a,t=!0){const{TextDrawer:i}=await Promise.resolve().then(e.bind(e,2683));await a.addShape(s.h,new i,t)}}}]);