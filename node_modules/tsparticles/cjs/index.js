"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadFull = void 0;
async function loadFull(engine, refresh = true) {
    const { loadDestroyUpdater } = await Promise.resolve().then(() => __importStar(require("@tsparticles/updater-destroy"))), { loadRollUpdater } = await Promise.resolve().then(() => __importStar(require("@tsparticles/updater-roll"))), { loadTiltUpdater } = await Promise.resolve().then(() => __importStar(require("@tsparticles/updater-tilt"))), { loadTwinkleUpdater } = await Promise.resolve().then(() => __importStar(require("@tsparticles/updater-twinkle"))), { loadWobbleUpdater } = await Promise.resolve().then(() => __importStar(require("@tsparticles/updater-wobble"))), { loadTextShape } = await Promise.resolve().then(() => __importStar(require("@tsparticles/shape-text"))), { loadExternalTrailInteraction } = await Promise.resolve().then(() => __importStar(require("@tsparticles/interaction-external-trail"))), { loadAbsorbersPlugin } = await Promise.resolve().then(() => __importStar(require("@tsparticles/plugin-absorbers"))), { loadEmittersPlugin } = await Promise.resolve().then(() => __importStar(require("@tsparticles/plugin-emitters"))), { loadEmittersShapeCircle } = await Promise.resolve().then(() => __importStar(require("@tsparticles/plugin-emitters-shape-circle"))), { loadEmittersShapeSquare } = await Promise.resolve().then(() => __importStar(require("@tsparticles/plugin-emitters-shape-square"))), { loadSlim } = await Promise.resolve().then(() => __importStar(require("@tsparticles/slim")));
    await loadDestroyUpdater(engine, false);
    await loadRollUpdater(engine, false);
    await loadTiltUpdater(engine, false);
    await loadTwinkleUpdater(engine, false);
    await loadWobbleUpdater(engine, false);
    await loadTextShape(engine, false);
    await loadExternalTrailInteraction(engine, false);
    await loadAbsorbersPlugin(engine, false);
    await loadEmittersPlugin(engine, false);
    await loadEmittersShapeCircle(engine, false);
    await loadEmittersShapeSquare(engine, false);
    await loadSlim(engine, refresh);
}
exports.loadFull = loadFull;
